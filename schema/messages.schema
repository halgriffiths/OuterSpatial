package messages;

import "commodity.schema";

enum AgentType {
  MONITOR = 0;
  AI_TRADER= 1;
  HUMAN_TRADER = 2;
}

enum TradeOutcome {
  // Order completed (all goods bought/sold)
  FILLED = 1;
  // Some, but not all, of the requested goods were bought/sold
  MIXED = 2;
  // Nothing was bought/sold
  EMPTY = 3;
  // Order failed (eg: missing stake, malformed request, etc)
  REJECTED = 4;
}

type BidOffer {
  EntityId sender_id = 1;
  string good = 2;
  uint64 expiry_time = 3;
  int32 quantity = 4;
  double unit_price = 5;
}

type AskOffer {
  EntityId sender_id = 1;
  string good = 2;
  uint64 expiry_time = 3;
  int32 quantity = 4;
  double unit_price = 5;
}

type BidResult {
  string good = 1;

  int32 quantity_bought = 2;
  int32 quantity_unbought = 3;
  double avg_price = 4;

  bool broker_fee_paid = 5;
  TradeOutcome outcome = 6;
}

type AskResult {
  string good = 1;

  int32 quantity_sold = 2;
  int32 quantity_unsold = 3;
  double avg_price = 4;

  bool broker_fee_paid = 5;
  TradeOutcome outcome = 6;
}

type RegisterRequest {
  AgentType type = 1;
  //int64 requested_id = 2;
}

type RegisterResponse {
  bool accepted = 1;

  int64 entity_id = 2;
  list<commodity.Commodity> listed_items = 3;
}

type ProduceCommandRequest {
  EntityId sender_id = 1;
}

type ProduceCommandResponse {
  bool should_shutdown = 1;
}